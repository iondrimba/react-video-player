{"version":3,"sources":["helpers/converter.js","helpers/history.js","components/timer/index.js","components/seeker/index.js","components/star/index.js","components/tooltip/index.js","components/hotspot/hotSpot.js","components/hotspot/index.js","components/playPause/index.js","components/video/index.js","app.js","serviceWorker.js","index.js"],"names":["convertFormatedTimeToSeconds","time","split","reduce","acc","convertSecondsToHHMMss","totalSeconds","sec_num","parseInt","hours","Math","floor","minutes","seconds","percent","current","total","History","constructor","this","history","createHistory","onChange","change","listen","location","action","state","spot","update","name","push","Timer","Component","render","className","props","display","style","transform","position","Seeker","super","scale","duration","mousePosition","onClick","evt","onSeek","nativeEvent","layerX","currentTarget","offsetWidth","onMouseMove","setState","onMouseLeave","bind","currentPositionPercentual","width","Star","xmlns","viewBox","preserveAspectRatio","points","ToolTip","componentDidMount","animate","requestAnimationFrame","toolTip","ref","src","thumb","height","alt","description","HotSpot","getSpotPosition","containerWidth","onMouseOver","HotSpotList","hotSpots","map","index","key","PlayPause","onPlayClick","onPauseClick","playing","cx","cy","r","d","x","y","Video","seekSpot","video","controls","addEventListener","onTimeUpdate","onLoadMetadata","onSeeked","window","onResize","document","querySelector","currentTime","ended","interval","setTimeout","play","seeking","classList","remove","clearTimeout","seek","pause","add","onHotSpotClick","onPlayPauseClick","source","type","App","fetch","then","response","json","data","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29e0a82f.chunk.js","sourcesContent":["export const convertFormatedTimeToSeconds = (time) => {\n  return time.split(':').reduce((acc, time) => (60 * acc) + +time);\n}\n\nexport const convertSecondsToHHMMss = (totalSeconds) => {\n  const sec_num = parseInt(totalSeconds, 10);\n  let hours = Math.floor(sec_num / 3600);\n  let minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n  let seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n  if (hours < 10) { hours = \"0\" + hours; }\n  if (minutes < 10) { minutes = \"0\" + minutes; }\n  if (seconds < 10) { seconds = \"0\" + seconds; }\n\n  return `${hours}:${minutes}:${seconds}`;\n}\n\nexport const percent = (current, total) => {\n  return (current / total) * 100\n}\n","import createHistory from 'history/createBrowserHistory';\n\nexport default class History {\n  constructor() {\n    this.history = createHistory();\n  }\n\n  onChange(change) {\n    this.history.listen((location, action) => {\n      if (location.state) {\n        change(location.state.spot);\n      }\n    });\n  }\n\n  update(spot) {\n    if (spot.name) {\n      this.history.push(`${spot.name}`, { spot: spot.time });\n    } else {\n      this.history.push(spot);\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass Timer extends Component {\n  render() {\n    return (\n      <div className={this.props.display ? 'timer' : 'timer timer--hide'} style={{ transform: `translateX(${this.props.position - 30}px)` }}>\n        {this.props.time}\n      </div >\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport { convertSecondsToHHMMss, percent } from '../../helpers/converter';\nimport Timer from '../timer';\nimport './styles.css';\n\nclass Seeker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scale: 0,\n      duration: this.props.duration,\n      mousePosition: 0,\n      display: false,\n      time: 0\n    }\n  }\n\n  onClick(evt) {\n    this.props.onSeek(percent(evt.nativeEvent.layerX, evt.currentTarget.offsetWidth));\n  }\n\n  onMouseMove(evt) {\n    const percentTime = percent(evt.nativeEvent.layerX, evt.currentTarget.offsetWidth);\n    const seconds = (percentTime * this.props.duration) / 100;\n\n    this.setState({ display: true, time: convertSecondsToHHMMss(seconds), mousePosition: evt.nativeEvent.layerX, scale: (evt.nativeEvent.layerX / evt.currentTarget.offsetWidth) });\n  }\n\n  onMouseLeave(evt) {\n    this.setState({ scale: 0, display: false });\n  }\n\n  render() {\n    return (\n      <div className='seeker' onClick={this.onClick.bind(this)} onMouseLeave={this.onMouseLeave.bind(this)} onMouseMove={this.onMouseMove.bind(this)}>\n        <Timer time={this.state.time} display={this.state.display} position={this.state.mousePosition} />\n        <div className='seeker__knob' style={{ transform: `translateX(${(this.props.currentPositionPercentual * this.props.width) / 100 - 5}px)` }}></div>\n        <div className='seeker__line seeker__line--bg'></div>\n        <div className='seeker__line seeker__line--mover' style={{ transform: `scaleX(${this.state.scale})` }}></div>\n        <div className='seeker__line seeker__line--current' style={{ transform: `scaleX(${this.props.currentPositionPercentual / 100})` }} ></div>\n      </div>\n    );\n  }\n}\n\nexport default Seeker;\n","import React from 'react';\nimport './styles.css';\n\nconst Star = () => {\n  return (\n    <svg className='star' xmlns='http://www.w3.org/2000/svg' viewBox='60 0 121 115' preserveAspectRatio='xMinYMax meet'>\n     <polygon points='124.635,8.232 139.966,39.295 174.248,44.277 149.442,68.456 155.297,102.598 124.635,86.479   93.974,102.598 99.83,68.456 75.024,44.277 109.306,39.295 '/>\n    </svg>\n  )\n}\n\nexport default Star;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass ToolTip extends Component {\n  componentDidMount() {\n    if (this.props.animate) {\n\n      //little trick to avoid setTimeout to display css animation\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          if (this.toolTip) {\n            this.toolTip.style = `opacity:1;transform: rotate(0deg) translateY(-97%)`;\n          }\n        });\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div ref={(toolTip) => { this.toolTip = toolTip; }} className='tool-tip'>\n        <img className='tool-tip__image' src={this.props.thumb} width={200} height={150} alt=\"tooltip\" />\n        <p className='tool-tip__description'>{this.props.description}</p>\n      </div>\n    );\n  }\n}\n\nexport default ToolTip;\n","import React, { Component } from 'react';\nimport { convertFormatedTimeToSeconds, percent } from '../../helpers/converter';\nimport Star from '../star';\nimport ToolTip from '../tooltip';\n\nclass HotSpot extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spot: {}\n    }\n  }\n\n  getSpotPosition(time, duration) {\n    const seconds = convertFormatedTimeToSeconds(time);\n    return { transform: `translateX(${(percent(seconds, duration) * this.props.containerWidth) / 100}px)` };\n  }\n\n  onClick() {\n    this.props.onClick(this.props.spot);\n  }\n\n  onMouseOver(spot) {\n    this.setState({ spot });\n  }\n\n  onMouseLeave() {\n    this.setState({ spot: {} });\n  }\n\n  toolTip() {\n    let toolTip = null;\n\n    if (this.state.spot.name) {\n      toolTip = <ToolTip animate={true} thumb={this.state.spot.thumb} description={this.state.spot.description} />\n    }\n\n    return toolTip;\n  }\n\n  render() {\n    return (\n      <div ref={(spot) => { this.spot = spot; }}\n        className='hotspot'\n        onClick={this.onClick.bind(this)}\n        onMouseLeave={this.onMouseLeave.bind(this)}\n        onMouseOver={this.onMouseOver.bind(this, this.props.spot)}\n        style={this.getSpotPosition(this.props.spot.time, this.props.duration)}>\n        <Star/>\n        {this.toolTip()}\n      </div>\n    );\n  }\n}\n\nexport default HotSpot;\n","import React, { Component } from 'react';\nimport HotSpot from './hotSpot';\nimport './styles.css';\n\nclass HotSpotList extends Component {\n  render() {\n    return (\n      <div className='hotspot-container'>\n        {\n          this.props.hotSpots.map((spot, index) => {\n            return <HotSpot onClick={this.props.onClick.bind(this)} containerWidth={this.props.width} spot={spot} duration={this.props.duration} key={index} />\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default HotSpotList;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass PlayPause extends Component {\n  onPlayClick() {\n    this.props.onClick(true);\n  }\n\n  onPauseClick() {\n    this.props.onClick(false);\n  }\n\n  render() {\n    return (\n      <div className='play-pause'>\n        <svg onClick={this.onPlayClick.bind(this)} className={`button ${this.props.playing ? 'hide' : ''}`} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 283.5 283.5'>\n          <circle cx='141.7' cy='141.7' r='137.5' className='button__bg' />\n          <path d='M113.6 78.1L201.8 141.7 113.6 205.4' className='button__icon' />\n        </svg>\n        <svg onClick={this.onPauseClick.bind(this)} className={`button ${this.props.playing ? '' : 'hide'}`} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 283.5 283.5'>\n          <circle cx='141.7' cy='141.7' r='137.5' className='button__bg' />\n          <g xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"120\" width=\"30\" x=\"95\" y=\"85\"></rect><rect height=\"120\" width=\"30\" x=\"150\" y=\"85\"></rect></g>\n        </svg>\n      </div >\n    );\n  }\n}\n\nexport default PlayPause;\n","import React, { Component } from 'react';\nimport { convertFormatedTimeToSeconds, percent } from '../../helpers/converter';\nimport History from '../../helpers/history';\nimport Seeker from '../seeker';\nimport HotSpotList from '../hotspot';\nimport PlayPause from '../playPause';\nimport './styles.css';\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.history = new History();\n    this.history.onChange(this.seekSpot.bind(this));\n\n    this.state = {\n      duration: 0,\n      currentPositionPercentual: 0,\n      playing: false,\n      width: 0\n    };\n  }\n\n  componentDidMount() {\n    this.video.controls = false;\n\n    this.video.addEventListener('timeupdate', this.onTimeUpdate.bind(this));\n\n    this.video.addEventListener('loadedmetadata', this.onLoadMetadata.bind(this));\n\n    this.video.addEventListener('seeked', this.onSeeked.bind(this));\n\n    window.addEventListener('resize', this.onResize.bind(this));\n\n    this.onResize();\n  }\n\n  onResize() {\n    this.setState({ width: document.querySelector('.seeker').offsetWidth });\n  }\n\n  onLoadMetadata() {\n    this.setState({ duration: this.video.duration });\n  }\n\n  onTimeUpdate() {\n    this.setState({ currentPositionPercentual: percent(this.video.currentTime, this.video.duration)});\n\n    if (this.video.ended) {\n      this.setState({ playing: false, currentPositionPercentual: 0 });\n      this.history.update('/');\n    }\n  }\n\n  onSeeked() {\n    const interval = setTimeout(() => {\n      this.setState({ playing: true });\n      this.video.play();\n\n      this.seeking.classList.remove('seeking-overlay--show');\n\n      clearTimeout(interval);\n    }, 300);\n  }\n\n  seekSpot(time) {\n    this.seek(percent(convertFormatedTimeToSeconds(time), this.video.duration));\n  }\n\n  seek(percent) {\n    this.setState({ playing: false });\n    this.video.pause();\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        this.seeking.classList.add('seeking-overlay--show');\n      });\n    });\n\n    const interval = setTimeout(() => {\n      this.video.currentTime = (percent * this.video.duration) / 100;\n      clearTimeout(interval);\n    }, 100);\n\n  }\n\n  onHotSpotClick(spot, evt) {\n    this.history.update(spot);\n  }\n\n  onPlayPauseClick(playing) {\n    this.setState({ playing: playing });\n\n    if (this.state.playing) {\n      this.video.pause();\n    } else {\n      this.video.play();\n    }\n  }\n\n  render() {\n    return (\n      <div className='player'>\n        <div className='video-container'>\n          <video className='video' ref={(video) => { this.video = video; }}>\n            <source src={this.props.source} type='video/mp4' />\n          </video>\n          <div ref={(seeking) => { this.seeking = seeking; }} className='seeking-overlay'></div>\n          <PlayPause onClick={this.onPlayPauseClick.bind(this)} playing={this.state.playing} />\n        </div>\n        <Seeker onSeek={this.seek.bind(this)} duration={this.state.duration} width={this.state.width} currentPositionPercentual={this.state.currentPositionPercentual} />\n        <HotSpotList hotSpots={this.props.hotSpots} width={this.state.width} onClick={this.onHotSpotClick.bind(this)} duration={this.state.duration} />\n      </div>\n    );\n  }\n}\n\nexport default Video;\n","import React, { Component } from 'react';\nimport Video from './components/video';\nimport './common/styles.css';\nimport './app.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotSpots: []\n    }\n  }\n  componentDidMount() {\n    fetch('./data.json').then((response) => {\n      return response.json();\n    }).then((data) => {\n      this.setState({ hotSpots: data });\n    });\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Video source={'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'} hotSpots={this.state.hotSpots} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}